{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\GitHub\\\\assignment-3-mikeycody5\\\\src\\\\components\\\\timers\\\\Stopwatch.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Button from \"../timers/shared/button.js\";\nimport DisplayTime from \"../timers/shared/DisplayTime.js\";\nimport Panel from \"../timers/shared/Panel.js\";\nimport Input from \"../timers/shared/input.js\";\nimport { GlobalContext } from \"../../App.js\";\nconst Stopwatch = props => {\n  const [time, setTime] = useState((props.minutes * 60 + props.seconds) * 1000);\n  const {\n    activeIndex,\n    setActiveIndex,\n    timerIsRunning,\n    timers,\n    index,\n    setTimers\n  } = useContext(GlobalContext);\n  const isActive = props.index === activeIndex;\n  useEffect(() => {\n    let interval;\n    if (isActive && timerIsRunning) {\n      interval = setInterval(() => {\n        setTime(prevTime => {\n          const newTime = prevTime + 1000;\n\n          // Check if the time has reached the specified duration\n          if (newTime >= (props.minutes * 60 + props.seconds) * 1000) {\n            setActiveIndex(index + 1);\n            clearInterval(interval);\n          }\n          return newTime;\n        });\n      }, 1000);\n    } else {\n      clearInterval(interval);\n\n      // Reset the time to 0 when the stopwatch becomes inactive\n      if (!isActive) {\n        setTime(0);\n      }\n    }\n    return () => clearInterval(interval);\n  }, [isActive, activeIndex, timerIsRunning, props.index, props.minutes, props.seconds, setActiveIndex, index]);\n  const handleSetMinutes = mins => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      minutes: mins\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n  const handleSetSeconds = secs => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      seconds: secs\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stopwatch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    minutes: props.minutes,\n    setMinutes: handleSetMinutes,\n    seconds: props.seconds,\n    setSeconds: handleSetSeconds,\n    disabled: isActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DisplayTime, {\n    time: time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Stopwatch;","map":{"version":3,"names":["React","useState","useEffect","useContext","Button","DisplayTime","Panel","Input","GlobalContext","Stopwatch","props","time","setTime","minutes","seconds","activeIndex","setActiveIndex","timerIsRunning","timers","index","setTimers","isActive","interval","setInterval","prevTime","newTime","clearInterval","handleSetMinutes","mins","timerToEdit","updatedTimer","timersCopy","splice","handleSetSeconds","secs","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","setMinutes","setSeconds","disabled"],"sources":["C:/Desktop/GitHub/assignment-3-mikeycody5/src/components/timers/Stopwatch.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport Button from \"../timers/shared/button.js\";\nimport DisplayTime from \"../timers/shared/DisplayTime.js\";\nimport Panel from \"../timers/shared/Panel.js\";\nimport Input from \"../timers/shared/input.js\";\n\nimport { GlobalContext } from \"../../App.js\";\n\n\nconst Stopwatch = (props) => {\n  const [time, setTime] = useState((props.minutes * 60 + props.seconds) * 1000);\n  const {\n    activeIndex,\n    setActiveIndex,\n    timerIsRunning,\n    timers, \n    index,\n    setTimers,\n  } = useContext(GlobalContext);\n  const isActive = props.index === activeIndex;\n\n  useEffect(() => {\n    let interval;\n  \n    if (isActive && timerIsRunning) {\n      interval = setInterval(() => {\n        setTime((prevTime) => {\n          const newTime = prevTime + 1000;\n  \n          // Check if the time has reached the specified duration\n          if (newTime >= (props.minutes * 60 + props.seconds) * 1000) {\n            setActiveIndex(index + 1);\n            clearInterval(interval);\n          }\n  \n          return newTime;\n        });\n      }, 1000);\n    } else {\n      clearInterval(interval);\n  \n      // Reset the time to 0 when the stopwatch becomes inactive\n      if (!isActive) {\n        setTime(0);\n      }\n    }\n  \n    return () => clearInterval(interval);\n  }, [isActive, activeIndex, timerIsRunning, props.index, props.minutes, props.seconds, setActiveIndex, index]);\n  \n  \n\n  const handleSetMinutes = (mins) => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      minutes: mins,\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n\n  const handleSetSeconds = (secs) => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      seconds: secs,\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n\n\n\n  return (\n    <div className=\"stopwatch\">\n      <Input\n        minutes={props.minutes}\n        setMinutes={handleSetMinutes}\n        seconds={props.seconds}\n        setSeconds={handleSetSeconds}\n        disabled={isActive}\n      />\n      <DisplayTime time={time} />\n    </div>\n  );\n};\n\nexport default Stopwatch;"],"mappings":"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"},"metadata":{},"sourceType":"module"}