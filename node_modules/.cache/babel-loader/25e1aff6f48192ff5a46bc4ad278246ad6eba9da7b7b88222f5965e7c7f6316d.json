{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\GitHub\\\\assignment-3-mikeycody5\\\\src\\\\components\\\\timers\\\\Countdown.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport DisplayTime from \"../timers/shared/DisplayTime.js\";\nimport Input from \"../timers/shared/input.js\";\nimport { GlobalContext } from \"../../App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Countdown = props => {\n  _s();\n  const index = props.index;\n  const [time, setTime] = useState((props.minutes * 60 + props.seconds) * 1000);\n  const {\n    activeIndex,\n    timers,\n    setTimers,\n    setActiveIndex,\n    timerIsRunning\n  } = useContext(GlobalContext);\n  const isActive = props.index === activeIndex;\n  useEffect(() => {\n    let interval;\n    if (isActive && time > 0 && timerIsRunning) {\n      console.log({\n        index,\n        activeIndex\n      });\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime - 1000);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      console.log({\n        index,\n        activeIndex\n      });\n      setActiveIndex(index + 1);\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [time, activeIndex, index, isActive, setActiveIndex, timerIsRunning]);\n  const handleSetMinutes = mins => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      minutes: mins\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n  const handleSetSeconds = secs => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      seconds: secs\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"countdown\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      minutes: props.minutes,\n      setMinutes: handleSetMinutes,\n      seconds: props.seconds,\n      setSeconds: handleSetSeconds,\n      disabled: isActive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayTime, {\n      time: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Countdown, \"NHnnejRAnxNYkeY2JpzHFtzDE/c=\");\n_c = Countdown;\nexport default Countdown;\nvar _c;\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["React","useState","useEffect","useContext","DisplayTime","Input","GlobalContext","jsxDEV","_jsxDEV","Countdown","props","_s","index","time","setTime","minutes","seconds","activeIndex","timers","setTimers","setActiveIndex","timerIsRunning","isActive","interval","console","log","setInterval","prevTime","clearInterval","handleSetMinutes","mins","timerToEdit","updatedTimer","timersCopy","splice","handleSetSeconds","secs","className","children","setMinutes","setSeconds","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Desktop/GitHub/assignment-3-mikeycody5/src/components/timers/Countdown.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport DisplayTime from \"../timers/shared/DisplayTime.js\";\nimport Input from \"../timers/shared/input.js\"; \nimport { GlobalContext } from \"../../App.js\";\n\nconst Countdown = (props) => {\n  const index = props.index;\n  const [time, setTime] = useState((props.minutes * 60 + props.seconds) * 1000);\n  const {\n    activeIndex,\n    timers,\n    setTimers,\n    setActiveIndex,\n    timerIsRunning,\n  } = useContext(GlobalContext);\n  const isActive = props.index === activeIndex;\n\n  useEffect(() => {\n    let interval;\n\n    if (isActive && time > 0 && timerIsRunning) {\n      console.log({ index, activeIndex });\n      interval = setInterval(() => {\n        setTime((prevTime) => prevTime - 1000);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      console.log({ index, activeIndex });\n      setActiveIndex(index + 1);\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [time, activeIndex, index, isActive, setActiveIndex, timerIsRunning]);\n\n  \n\n  const handleSetMinutes = (mins) => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      minutes: mins,\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n\n  const handleSetSeconds = (secs) => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      seconds: secs,\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n\n  return (\n    <div className=\"countdown\">\n      <Input\n        minutes={props.minutes}\n        setMinutes={handleSetMinutes}\n        seconds={props.seconds}\n        setSeconds={handleSetSeconds}\n        disabled={isActive}\n      />\n      <DisplayTime time={time} />\n      \n    </div>\n  );\n};\n\nexport default Countdown;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}