{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\GitHub\\\\assignment-3-mikeycody5\\\\src\\\\components\\\\timers\\\\Stopwatch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Button from \"../timers/shared/button.js\";\nimport DisplayTime from \"../timers/shared/DisplayTime.js\";\nimport Panel from \"../timers/shared/Panel.js\";\nimport { FaFastForward } from \"react-icons/fa\";\nimport { GlobalContext } from \"../../App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stopwatch = props => {\n  _s();\n  const [time, setTime] = useState((props.minutes * 60 + props.seconds) * 1000);\n  const {\n    activeIndex,\n    setActiveIndex\n  } = useContext(GlobalContext);\n  const isActive = props.index === activeIndex;\n  useEffect(() => {\n    let interval;\n    if (isActive) {\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime + 1000);\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, activeIndex]);\n  const handleFastForward = () => {\n    setActiveIndex(props.index + 1);\n    setTime(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stopwatch\",\n    children: [/*#__PURE__*/_jsxDEV(DisplayTime, {\n      time: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Panel, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleFastForward,\n        children: /*#__PURE__*/_jsxDEV(FaFastForward, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Stopwatch, \"/3VhETOq2FaZavubwqxCAlrbYDk=\");\n_c = Stopwatch;\nexport default Stopwatch;\nvar _c;\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Button","DisplayTime","Panel","FaFastForward","GlobalContext","jsxDEV","_jsxDEV","Stopwatch","props","_s","time","setTime","minutes","seconds","activeIndex","setActiveIndex","isActive","index","interval","setInterval","prevTime","clearInterval","handleFastForward","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Desktop/GitHub/assignment-3-mikeycody5/src/components/timers/Stopwatch.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport Button from \"../timers/shared/button.js\";\nimport DisplayTime from \"../timers/shared/DisplayTime.js\";\nimport Panel from \"../timers/shared/Panel.js\";\nimport { FaFastForward } from \"react-icons/fa\";\nimport { GlobalContext } from \"../../App.js\";\n\n\nconst Stopwatch = (props) => {\n  const [time, setTime] = useState((props.minutes * 60 + props.seconds) * 1000);\n  const {\n    activeIndex,\n    setActiveIndex,\n  } = useContext(GlobalContext);\n  const isActive = props.index === activeIndex;\n\n  useEffect(() => {\n    let interval;\n\n    if (isActive) {\n      interval = setInterval(() => {\n        setTime((prevTime) => prevTime + 1000);\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [isActive, activeIndex]);\n\n  const handleFastForward = () => {\n    setActiveIndex(props.index + 1);\n    setTime(0);\n  };\n\n\n  return (\n    <div className=\"stopwatch\">\n      <DisplayTime time={time} />\n      <Panel>\n      <Button onClick={handleFastForward}>\n          <FaFastForward />\n        </Button>\n      </Panel>\n    </div>\n  );\n};\n\nexport default Stopwatch;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,WAAW,MAAM,iCAAiC;AACzD,OAAOC,KAAK,MAAM,2BAA2B;AAC7C,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,SAASC,aAAa,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7C,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,CAACW,KAAK,CAACI,OAAO,GAAG,EAAE,GAAGJ,KAAK,CAACK,OAAO,IAAI,IAAI,CAAC;EAC7E,MAAM;IACJC,WAAW;IACXC;EACF,CAAC,GAAGhB,UAAU,CAACK,aAAa,CAAC;EAC7B,MAAMY,QAAQ,GAAGR,KAAK,CAACS,KAAK,KAAKH,WAAW;EAE5ChB,SAAS,CAAC,MAAM;IACd,IAAIoB,QAAQ;IAEZ,IAAIF,QAAQ,EAAE;MACZE,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC3BR,OAAO,CAAES,QAAQ,IAAKA,QAAQ,GAAG,IAAI,CAAC;MACxC,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACLC,aAAa,CAACH,QAAQ,CAAC;IACzB;IAEA,OAAO,MAAMG,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACF,QAAQ,EAAEF,WAAW,CAAC,CAAC;EAE3B,MAAMQ,iBAAiB,GAAGA,CAAA,KAAM;IAC9BP,cAAc,CAACP,KAAK,CAACS,KAAK,GAAG,CAAC,CAAC;IAC/BN,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC;EAGD,oBACEL,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBlB,OAAA,CAACL,WAAW;MAACS,IAAI,EAAEA;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3BtB,OAAA,CAACJ,KAAK;MAAAsB,QAAA,eACNlB,OAAA,CAACN,MAAM;QAAC6B,OAAO,EAAEP,iBAAkB;QAAAE,QAAA,eAC/BlB,OAAA,CAACH,aAAa;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACnB,EAAA,CAtCIF,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AAwCf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}