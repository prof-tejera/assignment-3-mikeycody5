{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\GitHub\\\\assignment-3-mikeycody5\\\\src\\\\components\\\\timers\\\\XY.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport DisplayTime from \"../timers/shared/DisplayTime.js\";\nimport Input from \"../timers/shared/input.js\";\nimport DisplayRounds from \"../timers/shared/DisplayRounds\";\nimport { GlobalContext } from \"../../App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst XY = props => {\n  _s();\n  const rounds = props.rounds;\n  const index = props.index;\n  const initialTime = (props.minutes * 60 + props.seconds) * 1000;\n  const [time, setTime] = useState(initialTime);\n  const [running, setRunning] = useState(false);\n  const [currentRound, setCurrentRound] = useState(1);\n  const {\n    setActiveIndex,\n    activeIndex,\n    timers,\n    setTimers,\n    timerIsRunning\n  } = useContext(GlobalContext);\n  const isActive = props.index === activeIndex;\n  useEffect(() => {\n    let interval;\n    if (isActive && time > 0 && timerIsRunning) {\n      interval = setInterval(() => {\n        setTime(prevTime => Math.max(0, prevTime - 1000));\n      }, 1000);\n    } else if (isActive && time === 0) {\n      clearInterval(interval);\n      setCurrentRound(prevRound => prevRound + 1);\n      if (currentRound >= rounds) {\n        setActiveIndex(index + 1);\n        setCurrentRound(1);\n        setTime(0);\n        setRunning(false);\n      } else {\n        setTime(initialTime);\n        setRunning(true);\n      }\n    } else {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [running, time, initialTime, currentRound, rounds, activeIndex, setActiveIndex]);\n  const handleSetMinutes = mins => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      minutes: mins\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n  const handleSetSeconds = secs => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      seconds: secs\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n  const handleSetRounds = rnds => {\n    const timerToEdit = timers[index];\n    const updatedTimer = {\n      ...timerToEdit,\n      rounds: rnds\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer\",\n    children: [/*#__PURE__*/_jsxDEV(DisplayRounds, {\n      currentRound: currentRound,\n      initialRounds: props.rounds,\n      onRoundsChange: handleSetRounds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      minutes: props.minutes,\n      setMinutes: handleSetMinutes,\n      seconds: props.seconds,\n      setSeconds: handleSetSeconds,\n      disabled: running\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-time\",\n      children: /*#__PURE__*/_jsxDEV(DisplayTime, {\n        time: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(XY, \"EODcauPej5YJSCSTSuTUs68B8c4=\");\n_c = XY;\nexport default XY;\nvar _c;\n$RefreshReg$(_c, \"XY\");","map":{"version":3,"names":["React","useState","useEffect","useContext","DisplayTime","Input","DisplayRounds","GlobalContext","jsxDEV","_jsxDEV","XY","props","_s","rounds","index","initialTime","minutes","seconds","time","setTime","running","setRunning","currentRound","setCurrentRound","setActiveIndex","activeIndex","timers","setTimers","timerIsRunning","isActive","interval","setInterval","prevTime","Math","max","clearInterval","prevRound","handleSetMinutes","mins","timerToEdit","updatedTimer","timersCopy","splice","handleSetSeconds","secs","handleSetRounds","rnds","className","children","initialRounds","onRoundsChange","fileName","_jsxFileName","lineNumber","columnNumber","setMinutes","setSeconds","disabled","_c","$RefreshReg$"],"sources":["C:/Desktop/GitHub/assignment-3-mikeycody5/src/components/timers/XY.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport DisplayTime from \"../timers/shared/DisplayTime.js\";\nimport Input from \"../timers/shared/input.js\"; \nimport DisplayRounds from \"../timers/shared/DisplayRounds\";\nimport { GlobalContext } from \"../../App.js\";\n\nconst XY = (props) => {\n  const rounds = props.rounds;\n  const index = props.index;\n  const initialTime = (props.minutes * 60 + props.seconds) * 1000;\n\n  const [time, setTime] = useState(initialTime);\n  const [running, setRunning] = useState(false);\n  const [currentRound, setCurrentRound] = useState(1);\n\n  const {\n    setActiveIndex,\n    activeIndex,\n    timers,\n    setTimers,\n    timerIsRunning,\n  } = useContext(GlobalContext);\n\n  const isActive = props.index === activeIndex;\n\n  useEffect(() => {\n    let interval;\n\n    if (isActive && time > 0 && timerIsRunning) {\n      interval = setInterval(() => {\n        setTime((prevTime) => Math.max(0, prevTime - 1000));\n      }, 1000);\n    } else if (isActive && time === 0) {\n      clearInterval(interval);\n      setCurrentRound((prevRound) => prevRound + 1);\n\n      if (currentRound >= rounds) {\n        setActiveIndex(index + 1);\n        setCurrentRound(1);\n        setTime(0);\n        setRunning(false);\n      } else {\n        setTime(initialTime);\n        setRunning(true);\n      }\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [running, time, initialTime, currentRound, rounds, activeIndex, setActiveIndex,]);\n\n  const handleSetMinutes = (mins) => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      minutes: mins,\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n\n  const handleSetSeconds = (secs) => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      seconds: secs,\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n\n  const handleSetRounds = (rnds) => {\n    const timerToEdit = timers[index];\n    const updatedTimer = {\n      ...timerToEdit,\n      rounds: rnds,\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n\n  return (\n    <div className=\"timer\">\n      <DisplayRounds\n        currentRound={currentRound}\n        initialRounds={props.rounds}\n        onRoundsChange={handleSetRounds}\n      />\n      <Input\n        minutes={props.minutes}\n        setMinutes={handleSetMinutes}\n        seconds={props.seconds}\n        setSeconds={handleSetSeconds}\n        disabled={running}\n      />\n      <div className=\"display-time\">\n        <DisplayTime time={time} />\n      </div>\n    </div>\n  );\n};\n\nexport default XY;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}