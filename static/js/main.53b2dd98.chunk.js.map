{"version":3,"sources":["images/bg3.png","components/documentation/DocumentComponent.js","components/generic/Loading.js","views/DocumentationView.js","components/timers/shared/DisplayTime.js","components/timers/shared/input.js","components/timers/Countdown.js","components/timers/shared/ProgressBar.js","components/timers/shared/DisplayRounds.js","components/timers/Tabata.js","components/timers/Stopwatch.js","components/timers/XY.js","views/TimersView.js","components/timers/shared/TimerExplanation.js","views/AddView.js","App.js","index.js"],"names":["module","exports","Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","Title","_templateObject3","RenderComponent","_templateObject4","Documentation","table","_templateObject5","DocumentComponent","_ref","title","component","propDocs","React","createElement","map","doc","index","key","prop","description","type","defaultValue","primaryColor","sizeMapping","small","medium","large","Dot","span","props","size","color","DotGroup","Loading","Display","formatTime","time","minutes","Math","floor","slice","seconds","concat","DisplayTime","InputContainer","LabelContainer","Label","label","SelectInput","select","Input","setMinutes","setSeconds","disabled","renderOptions","start","end","options","i","push","value","onChange","e","Number","target","Countdown","setTime","useState","activeIndex","timers","setTimers","setActiveIndex","timerIsRunning","useContext","GlobalContext","isActive","useEffect","interval","console","log","setInterval","prevTime","clearInterval","className","mins","updatedTimer","timersCopy","splice","secs","StyledProgressBar","ProgressBar","max","DisplayRoundsContainer","DisplayRoundsLabel","DisplayRoundsSelect","DisplayRounds","currentRound","initialRounds","onRoundsChange","resting","rounds","setRounds","handleRoundsChange","newRounds","Tabata","initialTime","running","setRunning","setCurrentRound","isResting","setIsResting","setProgress","isPaused","prevRound","rnds","Stopwatch","newTime","XY","Timers","Timer","StyledButton","button","ButtonGroup","TimerGroup","AddButton","Link","_templateObject6","TimersView","setIsPaused","setTimerIsRunning","storedTimers","localStorage","getItem","JSON","parse","intervalId","setItem","stringify","handleButtonAction","action","prevIsPaused","prevTimerIsRunning","totalDuration","reduce","total","timer","timerDuration","componentType","moveTimer","currentIndex","direction","newIndex","length","newTimers","movedTimer","isAnyTimerActive","some","_","Fragment","onClick","FaFastForward","FaPlay","FaPause","to","handleAddButtonClick","FaArrowRight","style","textAlign","marginTop","fontSize","totalSeconds","hours","formatDuration","position","renderComponent","timerItem","top","left","transform","FaArrowUp","bottom","FaArrowDown","DropdownButton","DropdownContent","TimerSection","TimerTitle","h2","TimerDescription","p","TimerExplanation","dropdownVisible","setDropdownVisible","toggleDropdown","BackButton","bgColor","_ref2","fontColor","_ref3","hoverColor","_templateObject7","TimerButtons","_templateObject8","StyledRemoveButton","_templateObject9","StyledSaveButton","_templateObject10","_ref4","saveSuccess","_ref5","AddView","_ref6","onRemoveTimer","setSaveSuccess","FaArrowLeft","newTimer","handleAddTimer","handleSaveTimer","savedTimers","FaCheck","queueItem","updatedTimers","filter","handleRemoveTimer","bg3","createContext","ErrorFallback","error","whiteSpace","message","App","pausedIndex","setPausedIndex","ErrorBoundary","FallbackComponent","onError","info","Provider","updateTimersOrder","newOrder","Router","Routes","Route","path","element","DocumentationView","removedTimer","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.53b2dd98.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg3.13a2ec5b.png\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  border: 1px solid #121212;\n  margin: 20px 0px;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  font-size: 1.3rem;\n`;\n\nconst RenderComponent = styled.div`\n  padding: 25px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Documentation = styled.table``;\n\nconst DocumentComponent = ({ title, component, propDocs }) => {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      <Container>\n        <RenderComponent>{component}</RenderComponent>\n        <Documentation>\n          <thead>\n            <tr>\n              <th>Prop</th>\n              <th>Description</th>\n              <th>Type</th>\n              <th>Default value</th>\n            </tr>\n          </thead>\n          <tbody>\n            {propDocs.map((doc, index) => {\n              return (\n                <tr key={index}>\n                  <td>{doc.prop}</td>\n                  <td>{doc.description}</td>\n                  <td>{doc.type}</td>\n                  <td>\n                    <code>{doc.defaultValue}</code>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Documentation>\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default DocumentComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst primaryColor = \"#ffa2bf\";\n\nconst sizeMapping = {\n  small: 10,\n  medium: 14,\n  large: 20,\n};\n\nconst Container = styled.div`\n  animation: spin 1.5s linear infinite;\n\n  @-moz-keyframes spin {\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Dot = styled.span`\n  display: block;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  background-color: ${(props) => props.color};\n  border-radius: 100%;\n  transform: scale(0.75);\n  transform-origin: 50% 50%;\n  opacity: 0.3;\n  animation: wobble 1s ease-in-out infinite;\n\n  @keyframes wobble {\n    0% {\n      border-radius: 25%;\n    }\n    100% {\n      border-radius: 100%;\n    }\n  }\n`;\n\nconst DotGroup = styled.div`\n  display: flex;\n`;\n\nconst Loading = ({ size = \"medium\", color = primaryColor }) => {\n  return (\n    <Container>\n      <DotGroup>\n        <Dot size={sizeMapping[size]} color={color} />\n        <Dot size={sizeMapping[size]} color={color} />\n      </DotGroup>\n      <DotGroup>\n        <Dot size={sizeMapping[size]} color={color} />\n        <Dot size={sizeMapping[size]} color={color} />\n      </DotGroup>\n    </Container>\n  );\n};\n\nLoading.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  color: PropTypes.string,\n};\n\nexport default Loading;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\n\nimport Loading from \"../components/generic/Loading\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\n\nconst Documentation = () => {\n  return (\n    <Container>\n      <div>\n        <Title>Documentation</Title>\n        <DocumentComponent\n          title=\"Loading spinner \"\n          component={<Loading />}\n          propDocs={[\n            {\n              prop: \"size\",\n              description: \"Changes the size of the loading spinner\",\n              type: \"string\",\n              defaultValue: \"medium\",\n            },\n          ]}\n        />\n      </div>\n    </Container>\n  );\n};\n\nexport default Documentation;\n","\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Display = styled.div`\n  transition: opacity 0.5s ease-in-out;\n  font-size: 60px;\n  z-index: 0;\n  font-weight: 200;\n  padding: 7px 7px;\n  margin-bottom: 10px;\n  color: red;\n  text-align: center;\n  background-color: #121212;\n  border-radius: 10px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.4);\n  position: relative;\n\n  background-image: \n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%);\n  background-size: 30px 30px, 30px 30px, 30px 30px, 30px 30px;\n  background-position: 0 0, 10px 10px, 20px 20px, 15px 15px;\n\n\n  \n  }\n`;\n\n\n\nconst DisplayTime = ({ time }) => (\n    <Display>{formatTime(time)}</Display>\n  );\n  \n  const formatTime = (time) => {\n    const minutes = (\"0\" + Math.floor((time / 60000) % 60)).slice(-2);\n    const seconds = (\"0\" + Math.floor((time / 1000) % 60)).slice(-2);\n    return `${minutes}:${seconds}`;\n  };\n\n\n\nexport default DisplayTime;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst InputContainer = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n  flex-direction: row;\n  align-items: center;\n  background-color: #121212;\n  \n  border-radius: 10px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.4);\n  background-image: \n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%);\n  background-size: 30px 30px, 30px 30px, 30px 30px, 30px 30px;\n  background-position: 0 0, 10px 10px, 20px 20px, 15px 15px;\n`;\n\nconst LabelContainer = styled.div`\n  flex: 1;\n  align-items: center;\n  border-radius: 25px;\n  margin: 10px;\n  padding-left: 5px;\n  padding-right: 5px;\n  background-color: black;\n`;\n\nconst Label = styled.label`\n  flex: 1; \n  font-weight: 300;\n  font-size: 16px;\n  background-color: black;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n`;\n\nconst SelectInput = styled.select`\n  flex: 1;\n  font-weight: 300;\n  font-size: 16px;\n  padding: 7px;\n  margin: 12px 0px 12px 12px;\n  background-color: darkred;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  border-radius: 25px;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: black;\n  }\n`;\n\nconst Input = ({ minutes, setMinutes, seconds, setSeconds, disabled, }) => {\n  const renderOptions = (start, end) => {\n    const options = [];\n    for (let i = start; i <= end; i++) {\n      options.push(\n        <option key={i} value={i}>\n          {i < 10 ? `0${i}` : i}\n        </option>\n      );\n    }\n    return options;\n  };\n\n  return (\n    <InputContainer>\n      <LabelContainer>\n        <Label>MINUTES:</Label>\n        <SelectInput\n          value={minutes}\n          onChange={(e) => setMinutes(Number(e.target.value))}\n          disabled={disabled}\n        >\n          {renderOptions(0, 59)}\n        </SelectInput>\n      </LabelContainer>\n\n      <LabelContainer>\n        <Label>SECONDS:</Label>\n        <SelectInput\n          value={seconds}\n          onChange={(e) => setSeconds(Number(e.target.value))}\n          disabled={disabled}\n        >\n          {renderOptions(0, 59)}\n        </SelectInput>\n      </LabelContainer>\n    </InputContainer>\n  );\n};\n\nexport default Input;","import React, { useState, useEffect, useContext } from \"react\";\nimport DisplayTime from \"../timers/shared/DisplayTime.js\";\nimport Input from \"../timers/shared/input.js\"; \nimport { GlobalContext } from \"../../App.js\";\n\nconst Countdown = (props) => {\n  const index = props.index;\n  const [time, setTime] = useState((props.minutes * 60 + props.seconds) * 1000);\n  const {\n    activeIndex,\n    timers,\n    setTimers,\n    setActiveIndex,\n    timerIsRunning,\n  } = useContext(GlobalContext);\n  const isActive = props.index === activeIndex;\n\n  useEffect(() => {\n    let interval;\n\n    if (isActive && time > 0 && timerIsRunning) {\n      console.log({ index, activeIndex });\n      interval = setInterval(() => {\n        setTime((prevTime) => prevTime - 1000);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      console.log({ index, activeIndex });\n      setActiveIndex(index + 1);\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [time, activeIndex, index, isActive, setActiveIndex, timerIsRunning]);\n\n  \n\n  const handleSetMinutes = (mins) => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      minutes: mins,\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n\n  const handleSetSeconds = (secs) => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      seconds: secs,\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n\n  return (\n    <div className=\"countdown\">\n      <Input\n        minutes={props.minutes}\n        setMinutes={handleSetMinutes}\n        seconds={props.seconds}\n        setSeconds={handleSetSeconds}\n        disabled={isActive}\n      />\n      <DisplayTime time={time} />\n      \n    </div>\n  );\n};\n\nexport default Countdown;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledProgressBar = styled.div`\n  width: 100%;\n  height: 94px;\n  margin-bottom: 10px;\n  border-radius: 10px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.4);\n  background-color: black;\n  overflow: hidden;\n  opacity: ${(props) => (props.value > 0 ? 1 : 0)};\n  transition: opacity 0.5s ease-in-out;\n\n  & > div {\n    width: ${(props) => props.value}%;\n    height: 100%;\n    border-radius: 10px;\n    background-color: darkred;\n    transition: width 1s linear; \n  }\n`;\n\nconst ProgressBar = ({ value, max }) => (\n  <StyledProgressBar value={(value / max) * 100}>\n    <div />\n  </StyledProgressBar>\n);\n\nexport default ProgressBar;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst DisplayRoundsContainer = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n  flex-direction: row;\n  align-items: center;\n  background-color: #121212;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.4);\n  background-image: \n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%);\n  background-size: 30px 30px, 30px 30px, 30px 30px, 30px 30px;\n  background-position: 0 0, 10px 10px, 20px 20px, 15px 15px;\n`;\n\nconst LabelContainer = styled.div`\n  flex: 1;\n  align-items: center;\n  border-radius: 25px;\n  margin: 10px;\n  background-color: black;\n`;\n\nconst DisplayRoundsLabel = styled.label`\nflex: 1; \nfont-weight: 300;\nfont-size: 16px;\nbackground-color: black;\ncolor: #fff;\nborder: none;\ncursor: pointer;\n`;\nconst DisplayRoundsSelect = styled.select`\nflex: 1;\n  font-weight: 300;\n  font-size: 16px;\n  padding: 7px;\n  margin: 10px 0px 10px 10px;\n  background-color: darkred;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  border-radius: 25px;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: black;\n  }\n`;\n\nconst renderOptions = (start, end) => {\n  const options = [];\n  for (let i = start; i <= end; i++) {\n    options.push(\n      <option key={i} value={i}>\n        {i < 10 ? `0${i}` : i}\n      </option>\n    );\n  }\n  return options;\n};\n\nconst DisplayRounds = ({ currentRound, initialRounds, onRoundsChange, disabled, resting }) => {\n  const [rounds, setRounds] = useState(initialRounds);\n\n  useEffect(() => {\n    if (resting) {\n      setRounds(currentRound);\n    }\n  }, [currentRound, resting]);\n\n  const handleRoundsChange = (newRounds) => {\n    setRounds(newRounds);\n    onRoundsChange(newRounds);\n  };\n\n  return (\n    <DisplayRoundsContainer>\n      <LabelContainer>\n      <DisplayRoundsLabel>\n        ROUND {currentRound} / {rounds}\n      </DisplayRoundsLabel>\n      <DisplayRoundsSelect\n        value={rounds}\n        onChange={(e) => handleRoundsChange(Number(e.target.value))}\n        disabled={disabled || resting}\n      >\n        {renderOptions(1, 100)}\n      </DisplayRoundsSelect>\n      </LabelContainer>\n    </DisplayRoundsContainer>\n  );\n};\n\nexport default DisplayRounds;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport DisplayTime from \"../timers/shared/DisplayTime.js\";\nimport Input from \"../timers/shared/input.js\";\nimport ProgressBar from \"../timers/shared/ProgressBar.js\";\nimport DisplayRounds from \"../timers/shared/DisplayRounds\";\nimport { GlobalContext } from \"../../App.js\";\n\nconst Tabata = (props) => {\n  const rounds = props.rounds;\n  const index = props.index;\n  const initialTime = (props.minutes * 60 + props.seconds) * 1000;\n\n  const [time, setTime] = useState(initialTime);\n\n  const [running, setRunning] = useState(false);\n  const [currentRound, setCurrentRound] = useState(1);\n  const [isResting, setIsResting] = useState(false);\n  const [, setProgress] = useState(0);\n\n  const {\n    setActiveIndex,\n    activeIndex,\n    timers,\n    setTimers,\n    timerIsRunning,\n    isPaused,\n  } = useContext(GlobalContext);\n  const isActive = props.index === activeIndex;\n\n\n  const calculateProgress = () => {\n    if (isResting) {\n      return (time / initialTime) * 100;\n    } else {\n      return ((initialTime - time) / initialTime) * 100;\n    }\n  };\n\n\n  useEffect(() => {\n    let interval;\n  \n    if (isActive && time > 0 && timerIsRunning && !isPaused) {\n      interval = setInterval(() => {\n        setTime((prevTime) => Math.max(0, prevTime - 1000));\n        \n        if (isResting) {\n          const remainingTime = time / initialTime;\n          setProgress(1000 - remainingTime * 1000);\n        }\n      }, 1000);\n    } else if (isActive && time === 0) {\n      console.log({ index, activeIndex });\n      clearInterval(interval);\n      if (isResting) {\n        setIsResting(false);\n        setCurrentRound((prevRound) => prevRound + 1);\n        setTime(initialTime);\n        setRunning(true);\n        setProgress(0); \n      } else {\n        setIsResting(true);\n        setTime(initialTime);\n        setRunning(true);\n      }\n  \n      if (currentRound >= rounds) {\n        setActiveIndex(index + 1);\n        setCurrentRound(1);\n        setIsResting(false);\n        setTime(0);\n        setRunning(false);\n        setProgress(0); \n      }\n    } else {\n      console.log({ index, activeIndex });\n      clearInterval(interval);\n    }\n  \n    return () => clearInterval(interval);\n  }, [running, time, isResting, initialTime, currentRound, rounds, activeIndex, setActiveIndex, timerIsRunning, isPaused, index, isActive]);\n  \n   \n  \n  const handleSetMinutes = (mins) => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      minutes: mins,\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n\n  const handleSetSeconds = (secs) => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      seconds: secs,\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n\n  const handleSetRounds = (rnds) => {\n    const timerToEdit = timers[index];\n    const updatedTimer = {\n      ...timerToEdit,\n      rounds: rnds,\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n\n  return (\n    <div className=\"timer\">\n      <DisplayRounds\n        currentRound={currentRound}\n        initialRounds={props.rounds}\n        onRoundsChange={handleSetRounds}\n      />\n      <Input\n        minutes={props.minutes}\n        setMinutes={handleSetMinutes}\n        seconds={props.seconds}\n        setSeconds={handleSetSeconds}\n        disabled={running}\n      />\n      <div className=\"display-time\">\n        {isResting ? (\n          \n          <ProgressBar value={calculateProgress()} max=\"100\" />\n        ) : (\n          <DisplayTime time={time} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Tabata;","import React, { useState, useEffect, useContext } from \"react\";\nimport DisplayTime from \"../timers/shared/DisplayTime.js\";\nimport Input from \"../timers/shared/input.js\";\nimport { GlobalContext } from \"../../App.js\";\n\n\nconst Stopwatch = (props) => {\n  const [time, setTime] = useState((props.minutes * 60 + props.seconds) * 1000);\n  const {\n    activeIndex,\n    setActiveIndex,\n    timerIsRunning,\n    timers, \n    setTimers,\n    index,\n  } = useContext(GlobalContext);\n  const isActive = props.index === activeIndex;\n\n  useEffect(() => {\n    let interval;\n  \n    if (isActive && timerIsRunning) {\n      interval = setInterval(() => {\n        setTime((prevTime) => {\n          const newTime = prevTime + 1000;\n          if (newTime >= (props.minutes * 60 + props.seconds) * 1000) {\n            console.log({ index, activeIndex });\n            setActiveIndex(props.index + 1);\n            clearInterval(interval);\n          }\n  \n          return newTime;\n        });\n      }, 1000);\n    } else {\n      clearInterval(interval);\n      if (!isActive) {\n        setTime(0);\n      }\n    }\n  \n    return () => clearInterval(interval);\n  }, [isActive, index, activeIndex, timerIsRunning, props.index, props.minutes, props.seconds, setActiveIndex]);\n  \n  \n\n  const handleSetMinutes = (mins) => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      minutes: mins,\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n\n  const handleSetSeconds = (secs) => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      seconds: secs,\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n\n\n\n  return (\n    <div className=\"stopwatch\">\n      <Input\n        minutes={props.minutes}\n        setMinutes={handleSetMinutes}\n        seconds={props.seconds}\n        setSeconds={handleSetSeconds}\n        disabled={isActive}\n      />\n      <DisplayTime time={time} />\n    </div>\n  );\n};\n\nexport default Stopwatch;","import React, { useState, useEffect, useContext } from \"react\";\nimport DisplayTime from \"../timers/shared/DisplayTime.js\";\nimport Input from \"../timers/shared/input.js\"; \nimport DisplayRounds from \"../timers/shared/DisplayRounds\";\nimport { GlobalContext } from \"../../App.js\";\n\nconst XY = (props) => {\n  const rounds = props.rounds;\n  const index = props.index;\n  const initialTime = (props.minutes * 60 + props.seconds) * 1000;\n\n  const [time, setTime] = useState(initialTime);\n  const [running, setRunning] = useState(false);\n  const [currentRound, setCurrentRound] = useState(1);\n\n  const {\n    setActiveIndex,\n    activeIndex,\n    timers,\n    setTimers,\n    timerIsRunning,\n    isPaused,\n  } = useContext(GlobalContext);\n\n  const isActive = props.index === activeIndex;\n\n  useEffect(() => {\n    let interval;\n\n    if (isActive && time > 0 && timerIsRunning && !isPaused) {\n      interval = setInterval(() => {\n        setTime((prevTime) => Math.max(0, prevTime - 1000));\n      }, 1000);\n    } else if (isActive && time === 0) {\n      clearInterval(interval);\n      setCurrentRound((prevRound) => prevRound + 1);\n\n      if (currentRound >= rounds) {\n        setActiveIndex(index + 1);\n        setCurrentRound(1);\n        setTime(0);\n        setRunning(false);\n      } else {\n        setTime(initialTime);\n        setRunning(true);\n      }\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [running, time, initialTime, currentRound, rounds, activeIndex, setActiveIndex, timerIsRunning, isPaused, index, isActive]);\n\n  \n  const handleSetMinutes = (mins) => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      minutes: mins,\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n\n  const handleSetSeconds = (secs) => {\n    const timerToEdit = timers[props.index];\n    const updatedTimer = {\n      ...timerToEdit,\n      seconds: secs,\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(props.index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n\n  const handleSetRounds = (rnds) => {\n    const timerToEdit = timers[index];\n    const updatedTimer = {\n      ...timerToEdit,\n      rounds: rnds,\n    };\n    const timersCopy = [...timers];\n    timersCopy.splice(index, 1, updatedTimer);\n    setTimers(timersCopy);\n  };\n\n  return (\n    <div className=\"timer\">\n      <DisplayRounds\n        currentRound={currentRound}\n        initialRounds={props.rounds}\n        onRoundsChange={handleSetRounds}\n      />\n      <Input\n        minutes={props.minutes}\n        setMinutes={handleSetMinutes}\n        seconds={props.seconds}\n        setSeconds={handleSetSeconds}\n        disabled={running}\n      />\n      <div className=\"display-time\">\n        <DisplayTime time={time} />\n      </div>\n    </div>\n  );\n};\n\nexport default XY;\n","import React, { useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { GlobalContext } from \"../App.js\";\nimport { FaFastForward, FaArrowRight, FaPause, FaPlay, } from \"react-icons/fa\";\nimport Countdown from \"../components/timers/Countdown.js\";\nimport Tabata from \"../components/timers/Tabata.js\";\nimport Stopwatch from \"../components/timers/Stopwatch.js\";\nimport XY from \"../components/timers/XY.js\";\nimport { FaArrowUp, FaArrowDown } from \"react-icons/fa\";\n\n\n\n\nconst Timers = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 80px;\n`;\n\nconst Timer = styled.div`\n  border: ${({ isActive }) => (isActive ? \"3px solid darkred\" : \"1px solid gray\")};\n  border-radius: 15px;\n  padding: 15px;\n  padding-top: 20px;\n  font-size: 1.5rem;\n  color: darkred;\n  width: 100%;\n  text-align: center;\n`;\n\nconst StyledButton = styled.button`\n  background-color: darkred;\n  color: white;\n  padding: 10px 20px;\n  margin: 0 10px;\n  border: none;\n  border-radius: 25px;\n  font-size: 1rem;\n  font-weight: 400;\n  cursor: pointer;\n\n  &:hover {\n    background-color: red;\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flexwrap;\n  background-color: black;\n  padding: 25px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.4);\n`;\n\nconst TimerGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 78px;\n`;\n\n\nconst AddButton = styled(Link)`\nposition: absolute;\ntop: 65px;\nright: 20px;\npadding: 10px;\nbackground-color: darkgreen;\ncolor: white;\nborder-radius: 25px;\ntext-decoration: none;\nfont-size: 1rem;\ndisplay: flex;\nalign-items: center;\nz-index: 1;\n`;\n\n\n\nconst renderComponent = (timerItem, index) => {\n  let component;\n  if (timerItem.componentType === \"COUNTDOWN\") {\n    component = (\n      <Countdown\n        index={index}\n        minutes={timerItem.minutes}\n        seconds={timerItem.seconds}\n      />\n    );\n  }\n  if (timerItem.componentType === \"TABATA\") {\n    component = (\n      <Tabata\n        index={index}\n        minutes={timerItem.minutes}\n        seconds={timerItem.seconds}\n        rounds={timerItem.rounds}\n      />\n    );\n  }\n  if (timerItem.componentType === \"STOPWATCH\") {\n    component = <Stopwatch index={index}\n    minutes={timerItem.minutes}\n    seconds={timerItem.seconds} />;\n  }\n  if (timerItem.componentType === \"XY\") {\n    component = <XY \n    index={index}\n    minutes={timerItem.minutes}\n    seconds={timerItem.seconds}\n    rounds={timerItem.rounds} />;\n  }\n  return component;\n};\n\nconst TimersView = () => {\n  const { timers, setTimers } = useContext(GlobalContext);\n  const {\n    activeIndex,\n    setActiveIndex,\n    isPaused,\n    setIsPaused,\n    setTimerIsRunning,\n  } = useContext(GlobalContext);\n\n  const saveTimersToLocalStorage = () => {\n    localStorage.setItem(\"timers\", JSON.stringify(timers));\n  };\n\n  useEffect(() => {\n    const storedTimers = localStorage.getItem(\"timers\");\n    if (storedTimers) {\n      setTimers(JSON.parse(storedTimers));\n    }\n  }, [setTimers]);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      saveTimersToLocalStorage();\n    }, 5000); \n\n    return () => clearInterval(intervalId);\n\n    // eslint-disable-next-line\n  }, [timers]);\n\n  const handleButtonAction = (action) => {\n    switch (action) {\n      case \"fastForward\":\n        setActiveIndex(activeIndex + 1);\n        setIsPaused(false);\n        setTimerIsRunning(true);\n        break;\n      case \"START\":\n        setActiveIndex(0);\n        setIsPaused(false);\n        setTimerIsRunning(true);\n        break;\n      case \"pausePlay\":\n        setIsPaused((prevIsPaused) => !prevIsPaused);\n        setTimerIsRunning((prevTimerIsRunning) => !prevTimerIsRunning);\n        break;\n      case \"END\":\n        setActiveIndex(null);\n        setIsPaused(true);\n        setTimerIsRunning(false);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const totalDuration = timers.reduce((total, timer) => {\n    let timerDuration = timer.minutes * 60 + timer.seconds;\n\n    if (timer.componentType === \"XY\") {\n      timerDuration *= timer.rounds;\n    } else if (timer.componentType === \"TABATA\") {\n      timerDuration *= timer.rounds * 2;\n    }\n\n    return total + timerDuration;\n  }, 0);\n\n  const formatDuration = (totalSeconds) => {\n    const hours = Math.floor(totalSeconds / 3600);\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\n    const seconds = totalSeconds % 60;\n  \n    return `${hours > 0 ? hours + \"h \" : \"\"}${minutes}m ${seconds}s`;\n  };\n\n  const moveTimer = (currentIndex, direction) => {\n    const newIndex = direction === \"up\" ? currentIndex - 1 : currentIndex + 1;\n\n    if (newIndex >= 0 && newIndex < timers.length) {\n      const newTimers = [...timers];\n      const [movedTimer] = newTimers.splice(currentIndex, 1);\n      newTimers.splice(newIndex, 0, movedTimer);\n      setTimers(newTimers);\n    }\n  };\n\n  const isAnyTimerActive = timers.some((_, index) => activeIndex === index);\n\n  \n  const handleAddButtonClick = () => {\n    setActiveIndex(null);\n    setIsPaused(true);\n    setTimerIsRunning(false);\n  };\n\n  \n  return (\n    <div>\n      <ButtonGroup>\n        {timers.length > 0 ? (\n          <>\n            <StyledButton onClick={() => handleButtonAction(\"START\")}>\n              START\n            </StyledButton>\n            <StyledButton onClick={() => handleButtonAction(\"fastForward\")}>\n              <FaFastForward />\n            </StyledButton>\n            <StyledButton onClick={() => handleButtonAction(\"pausePlay\")}>\n              {isPaused ?  <FaPlay /> : <FaPause /> }\n            </StyledButton>\n            <StyledButton onClick={() => handleButtonAction(\"END\")}>\n              END\n            </StyledButton>\n          </>\n        ) : null}\n      </ButtonGroup>\n      <div></div>\n      <AddButton to=\"/add\" onClick={handleAddButtonClick}>\n      ADD / EDIT TIMERS<FaArrowRight />\n      </AddButton>\n      <div style={{ textAlign: \"center\", marginTop: \"60px\", fontSize: \"25px\" }}>\n        Total Workout Duration: {formatDuration(totalDuration)}\n      </div>\n      <TimerGroup>\n      <Timers>\n          {timers.length > 0 ? (\n            timers.map((timer, index) => (\n              <div key={index} style={{ position: \"relative\" }}>\n                <Timer key={index} isActive={activeIndex === index} style={{ position: \"relative\" }}>\n                <h2>{timer.title}</h2>\n                <p>{timer.description}</p>\n                  {renderComponent(timer, index)}\n                  {!isAnyTimerActive && (\n                    <div style={{ position: \"absolute\", top: -20, left: \"50%\", transform: \"translateX(-50%)\" }}>\n                      <StyledButton onClick={() => moveTimer(index, \"up\")}>\n                        <FaArrowUp />\n                      </StyledButton>\n                    </div>\n                  )}\n                  {!isAnyTimerActive && (\n                    <div style={{ position: \"absolute\", bottom: -20, left: \"50%\", transform: \"translateX(-50%)\" }}>\n                      <StyledButton onClick={() => moveTimer(index, \"down\")}>\n                        <FaArrowDown />\n                      </StyledButton>\n                    </div>\n                  )}\n                </Timer>\n              </div>\n            ))\n          ) : (\n            <div style={{ fontSize: \"20px\" }}>Configure your timers!</div>\n          )}\n        </Timers>\n      </TimerGroup>\n    </div>\n  );\n};\n\nexport default TimersView;","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst TimerExplanation = () => {\n  const [dropdownVisible, setDropdownVisible] = useState(false);\n\n  const toggleDropdown = () => {\n    setDropdownVisible(!dropdownVisible);\n  };\n\n  return (\n    <Container>\n      <DropdownButton onClick={toggleDropdown}>\n        Timer Information\n      </DropdownButton>\n\n      {dropdownVisible && (\n        <DropdownContent>\n          <TimerSection>\n            <TimerTitle>Countdown Timer</TimerTitle>\n            <TimerDescription>\n              The countdown timer counts down from a specified time to zero.\n            </TimerDescription>\n          </TimerSection>\n          \n          <TimerSection>\n            <TimerTitle>Tabata Timer</TimerTitle>\n            <TimerDescription>\n              The Tabata timer allows for rounds consisting of equal work and rest time. You may select your desired amount of rounds and duration per round. When the rest bar displays, RELAX!\n            </TimerDescription>\n          </TimerSection>\n          \n          <TimerSection>\n            <TimerTitle>Stopwatch</TimerTitle>\n            <TimerDescription>\n              The stopwatch is a simple timer that counts up from zero. To move on to the next timer in queue, press the fast forward button.\n            </TimerDescription>\n          </TimerSection>\n\n          <TimerSection>\n            <TimerTitle>XY Timer</TimerTitle>\n            <TimerDescription>\n              The XY timer allows for X amount of rounds with no rest in between each round. You may select your desired amount of rounds and duration per round.\n            </TimerDescription>\n          </TimerSection>\n        </DropdownContent>\n      )}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst DropdownButton = styled.button`\n  background-color: black;\n  color: #fff;\n  padding: 15px;\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n`;\n\nconst DropdownContent = styled.div`\n  color: white;\n  background-color: #121212;\n  border: 30px solid black;\n  border-radius: 15px;\n  padding: 20px;\n  margin-top: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  background-image: \n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%),\n    linear-gradient(135deg, transparent 49.5%, rgba(255, 0, 0, 0.2) 49.5%, rgba(255, 0, 0, 0.2) 50.5%, transparent 50.5%);\n  background-size: 30px 30px, 30px 30px, 30px 30px, 30px 30px;\n  background-position: 0 0, 10px 10px, 20px 20px, 15px 15px;\n`;\n\nconst TimerSection = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst TimerTitle = styled.h2`\n  font-size: 1.5rem;\n  margin-bottom: 10px;\n`;\n\nconst TimerDescription = styled.p`\n  font-size: 1rem;\n  color: lightgrey;\n  background-color: black;\n  padding: 15px;\n  border-radius: 20px;\n`;\n\nexport default TimerExplanation;\n","import React, { useContext, useEffect, useState, } from \"react\";\nimport styled from \"styled-components\";\nimport TimerExplanation from \"../components/timers/shared/TimerExplanation\";\nimport { FaArrowLeft, FaCheck } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport { GlobalContext } from \"../App\";\nimport Countdown from \"../components/timers/Countdown\";\nimport Tabata from \"../components/timers/Tabata\";\nimport Stopwatch from \"../components/timers/Stopwatch\";\nimport XY from \"../components/timers/XY\";\n\nconst BackButton = styled(Link)`\n  position: absolute;\n  top: 65px;\n  right: 20px;\n  padding: 10px;\n  background-color: darkgreen;\n  color: white;\n  border-radius: 25px;\n  text-decoration: none;\n  font-size: 1rem;\n  display: flex;\n  align-items: center;\n  z-index: 1;\n`;\n\n\nconst ButtonGroup = styled.div`\n  display: flexwrap;\n  background-color: black;\n  padding: 25px;\n  \n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.4);\n  \n`;\n\nconst StyledButton = styled.button`\n  background-color: ${({ bgColor }) => bgColor || \"darkred\"};\n  color: ${({ fontColor }) => fontColor || \"white\"};\n  padding: 10px 20px;\n  margin: 0 10px;\n  border: none;\n  border-radius: 25px;\n  font-size: 1rem;\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${({ hoverColor }) => hoverColor || \"red\"};\n  }\n`;\n\nconst Timers = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst TimerGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 30px;\n`;\n\nconst Timer = styled.div`\n  border: 1px solid gray;\n  border-radius: 15px;\n  margin: 10px;\n  padding: 20px;\n  padding-bottom: 35px;\n  font-size: 2rem;\n  color: darkred;\n  width: 100%;\n  text-align: center;\n`;\n\nconst TimerTitle = styled.div`\n  margin: 25px;\n  font-weight: 400;\n`;\n\nconst TimerButtons = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  margin-top: 10px;\n`;\n\nconst StyledRemoveButton = styled(StyledButton)`\n  background-color: Darkred;\n  color: #d76060;\n  align-items: center;\n  margin-top: 20px;\n`;\n\nconst StyledSaveButton = styled(StyledButton)`\n  background-color: ${({ saveSuccess }) => (saveSuccess ? \"Darkgreen\" : \"darkgreen\")};\n  color: ${({ saveSuccess }) => (saveSuccess ? \"#60d760\" : \"white\")};\n`;\n\nconst AddView = ({ onRemoveTimer }) => {\n  \n  const { timers, setTimers } = useContext(GlobalContext);\n  const [saveSuccess, setSaveSuccess] = useState(false);\n  const TIMERS = [\n    { key: \"timer-countdown\", title: \"Countdown\", description: \"Counts down from a specified time to 0\" , componentType: \"COUNTDOWN\" },\n    { key: \"timer-tabata\", title: \"Tabata\", description: \"Rounds with equal work and rest time\" , componentType: \"TABATA\" },\n    { key: \"timer-stopwatch\", title: \"Stopwatch\", description: \"Counts up from 0 to a specified time\" , componentType: \"STOPWATCH\" },\n    { key: \"timer-xy\", title: \"XY\", description: \"Rounds of work with no rest time\" , componentType: \"XY\" },\n  ];\n\n  useEffect(() => {\n    const storedTimers = localStorage.getItem(\"timers\");\n    if (storedTimers) {\n      setTimers(JSON.parse(storedTimers));\n    }\n  }, [setTimers]);\n\n  const handleAddTimer = (timerItem) => {\n    const index = timers.length;\n    const newTimer = {\n      ...timerItem, title: timerItem.title, index,\n      key: index,\n      minutes: timerItem.minutes || 0,  \n      seconds: timerItem.seconds || 0,  \n      rounds: timerItem.rounds || 5, \n    };\n    setTimers([...timers, newTimer]);\n    setSaveSuccess(false);\n  };\n\n\n  const renderComponent = (timerItem, index) => {\n    let component;\n    switch (timerItem.componentType) {\n      case \"COUNTDOWN\":\n        component = (\n          <Countdown\n            index={index}\n            minutes={timerItem.minutes}\n            seconds={timerItem.seconds}\n          />\n        );\n        break;\n      case \"TABATA\":\n        component = (\n          <Tabata\n            index={index}\n            minutes={timerItem.minutes}\n            seconds={timerItem.seconds}\n            rounds={timerItem.rounds}\n          />\n        );\n        break;\n      case \"STOPWATCH\":\n        component = (\n          <Stopwatch\n            index={index}\n            minutes={timerItem.minutes}\n            seconds={timerItem.seconds}\n          />\n        );\n        break;\n      case \"XY\":\n        component = (\n          <XY\n            index={index}\n            minutes={timerItem.minutes}\n            seconds={timerItem.seconds}\n            rounds={timerItem.rounds}\n          />\n        );\n        break;\n      default:\n        break;\n    }\n    return component;\n  };\n\n  const handleRemoveTimer = (index) => {\n    const updatedTimers = timers.filter((_, i) => i !== index);\n    onRemoveTimer(updatedTimers, timers[index]);\n    setTimers(updatedTimers);\n    localStorage.setItem(\"timers\", JSON.stringify(updatedTimers));\n\n  };\n\n  const handleSaveTimer = () => {\n    const savedTimers = timers.map((timer) => ({\n      ...timer,\n      minutes: timer.minutes || 0,\n      seconds: timer.seconds || 0,\n      rounds: timer.rounds || 5,\n    }));\n\n    setTimers(savedTimers);\n    localStorage.setItem(\"timers\", JSON.stringify(savedTimers));\n    setSaveSuccess(true);\n  };\n\n  return (\n    <>\n      <BackButton to=\"/\">\n        <FaArrowLeft />VIEW WORKOUT\n      </BackButton>\n      <ButtonGroup>\n        {TIMERS.map((timer) => (\n          <StyledButton\n            key={timer.key}\n            onClick={() => handleAddTimer(timer)}\n            bgColor=\"#121212\"\n            hoverColor=\"red\"\n          >\n            {timer.title}\n          </StyledButton>\n        ))}\n        <StyledSaveButton\n          bgColor=\"Darkgreen\"\n          fontColor=\"white\"\n          hoverColor=\"grey\"\n          onClick={handleSaveTimer}\n          saveSuccess={saveSuccess}\n        >\n          {saveSuccess ? <FaCheck /> : \"Save\"}\n        </StyledSaveButton>\n      </ButtonGroup>\n      <TimerExplanation />\n      <Timers>\n        <TimerGroup>\n          {timers.map((queueItem, index) => (\n            <Timer key={queueItem.key}>\n              <TimerTitle>{queueItem.title}</TimerTitle>\n              {renderComponent(queueItem, index)}\n              <TimerButtons>\n                <StyledRemoveButton\n                  onClick={() => handleRemoveTimer(index)}\n                  bgColor=\"Darkred\"\n                  fontColor=\"#D76060\"\n                >\n                  Remove\n                </StyledRemoveButton>\n              </TimerButtons>\n            </Timer>\n          ))}\n        </TimerGroup>\n      </Timers>\n    </>\n  );\n};\n\nexport default AddView;\n","import { BrowserRouter as Router, Routes, Route,} from \"react-router-dom\";\nimport React, { useState, createContext, useEffect } from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport styled from \"styled-components\";\nimport DocumentationView from \"./views/DocumentationView\";\nimport TimersView from \"./views/TimersView\";\nimport AddView from \"./views/AddView\";\nimport bg3 from \"./images/bg3.png\";\n\nconst Container = styled.div`\n  background-color: #E3E3DD;\n  background-image: url(${bg3});\n  background-repeat: repeat; \n  background-position: center;\n  height: 100vh;\n  overflow: auto;\n  `;\n\nexport const GlobalContext = createContext(null);\n\nconst ErrorFallback = ({ error }) => (\n  <div>\n    <h1>Something went wrong! Restart the app!</h1>\n    <pre style={{ whiteSpace: \"normal\" }}>{error.message}</pre>\n  </div>\n);\n\n\nconst App = () => {\n  const [timers, setTimers] = useState([]);\n  const [activeIndex, setActiveIndex] = useState(null);\n  const [timerIsRunning, setTimerIsRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [pausedIndex, setPausedIndex] = useState();\n  \n  const handleRemoveTimer = (updatedTimers, removedTimer) => {\n    setTimers(updatedTimers);\n    console.log(\"Removed Timer:\", removedTimer);\n  };\n\n  const updateTimersOrder = (newOrder) => {\n    setTimers(newOrder);\n  };\n\n  useEffect(() => {\n    console.log(\"App.js global state active index:\", activeIndex);\n  }, [activeIndex]);\n\n  useEffect(() => {\n    console.log({ timers });\n  }, [timers]);\n\n  return (\n    <ErrorBoundary FallbackComponent={ErrorFallback} onError={(error, info) => console.error(error)}>\n    <GlobalContext.Provider\n      value={{\n        timers,\n        setTimers,\n        timerIsRunning,\n        setTimerIsRunning,\n        activeIndex,\n        setActiveIndex,\n        isPaused,\n        setIsPaused,\n        pausedIndex,\n        setPausedIndex,\n        updateTimersOrder,\n      }}\n    >\n      <Container>\n        <Router>\n          <Routes>\n            <Route path=\"/docs\" element={<DocumentationView />} />\n            <Route path=\"/\" element={<TimersView />} />\n            <Route\n              path=\"/add\"\n              element={<AddView onRemoveTimer={handleRemoveTimer} />}\n            />\n          </Routes>\n        </Router>\n      </Container>\n    </GlobalContext.Provider>\n    </ErrorBoundary>\n  );\n};\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}